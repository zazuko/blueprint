[
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://test.lindas.admin.ch/query]\n            \n\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n            PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n            PREFIX blueprint: <https://flux.described.at/> \n\n            CONSTRUCT {\n                <https://ld.flux.zazuko.com/DatasetRoottoGovernmentOrganizationTreeLink> blueprint:result <https://ld.flux.zazuko.com/DatasetRoottoGovernmentOrganizationTreeLink/0> .\n                <https://ld.flux.zazuko.com/DatasetRoottoGovernmentOrganizationTreeLink/0> a  blueprint:CompositionLinkResult .\n                <https://ld.flux.zazuko.com/DatasetRoottoGovernmentOrganizationTreeLink/0> blueprint:result ?result .\n                <https://ld.flux.zazuko.com/DatasetRoottoGovernmentOrganizationTreeLink/0> rdfs:label \"Publisher\" .\n                ?result ?resultP ?resultO .\n                ?element_1 ?connectionPointP ?connectionPointO .\n                ?result blueprint:target ?element_1 .\n                \n            } WHERE {\n                {\n                    # first path element - form link\n                    <https://register.ld.admin.ch/staatskalender/organization/10008671> a <http://schema.org/GovernmentOrganization> .\n                    <https://register.ld.admin.ch/staatskalender/organization/10008671> ^<https://schema.ld.admin.ch/datamngt#hasOwnerOrganization>/<https://schema.ld.admin.ch/datamngt#containsDataset> ?result .\n                    ?result a <https://schema.ld.admin.ch/datamngt#DatasetRoot> .\n                \n                       VALUES ?resultP {\n                           rdf:type\n                           rdfs:label\n                       }\n                       ?result ?resultP ?resultO .\n                       \n                }\n            }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=https://test.lindas.admin.ch/query]\n\n                PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n                PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n                PREFIX blueprint: <https://flux.described.at/> \n\n                CONSTRUCT {\n                    <https://ld.flux.zazuko.com/DatasetRoottoGovernmentOrganizationTreeLink> blueprint:result <https://ld.flux.zazuko.com/DatasetRoottoGovernmentOrganizationTreeLink/0> .\n                    <https://ld.flux.zazuko.com/DatasetRoottoGovernmentOrganizationTreeLink/0> a  blueprint:CompositionLinkResult .\n                    <https://ld.flux.zazuko.com/DatasetRoottoGovernmentOrganizationTreeLink/0> blueprint:result ?result .\n                    <https://ld.flux.zazuko.com/DatasetRoottoGovernmentOrganizationTreeLink/0> rdfs:label \"Publsied by\" .\n                    ?result ?resultP ?resultO .\n                    ?element_0_0 ?connectionPointP ?connectionPointO .\n                    ?result blueprint:source ?element_0_0 . \n                } WHERE {\n                    \n                        <https://health.ld.admin.ch/fsvo/TV_DegreeOfSeverity> a <https://schema.ld.admin.ch/datamngt#DatasetRoot> .\n                        <https://health.ld.admin.ch/fsvo/TV_DegreeOfSeverity> ^<https://schema.ld.admin.ch/datamngt#containsDataset>/<https://schema.ld.admin.ch/datamngt#hasOwnerOrganization> ?element_0_1 .\n                        ?element_0_1 a <http://schema.org/GovernmentOrganization> .\n                         \n                }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "PREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX bp: <https://flux.described.at/>\nPREFIX data: <https://ld.flux.zazuko.com/blueprint/app/>\nPREFIX oci: <https://oci.described.at/>\nPREFIX k8s: <https://k8s.described.at/>\n\nCONSTRUCT {\n    ?shape sh:group ?aggregate .\n    ?shape sh:targetClass ?type .\n\n    ?outgoingLinks ?linkP ?linkO .\n    ?propertyShape ?propertyP ?propertyO .\n    ?path sh:inversePath ?inversePath .\n\n    ?inShape sh:group ?inAggregate .\n    ?inShape sh:targetClass ?type.\n\n    ?incomingLinks ?linkP ?linkO .\n    \n} \nWHERE {\n    {\n        # outgoing links\n        {\n            SELECT ?outgoingLinks ?aggregate ?shape ?type WHERE {\n                BIND (k8s:Deployment AS ?type)\n                ?shape sh:targetClass ?type .\n                ?shape sh:group ?aggregate . \n                ?aggregate rdf:type/rdfs:subClassOf* bp:Aggregate.\n                ?outgoingLinks sh:targetClass ?aggregate .\n                ?outgoingLinks a bp:AggregateLink .\n            }\n        }\n        VALUES ?linkP { \n            sh:targetClass\n            sh:property\n            bp:target\n            rdfs:label\n        }\n        ?outgoingLinks ?linkP ?linkO .\n    } UNION  {\n        # outgoing links sh:property\n        {\n            SELECT ?outgoingLinks WHERE {\n                BIND (k8s:Deployment AS ?type)\n                ?shape sh:targetClass ?type .\n                ?shape sh:group ?aggregate . \n                ?aggregate rdf:type/rdfs:subClassOf* bp:Aggregate.\n                ?outgoingLinks sh:targetClass ?aggregate .\n                ?outgoingLinks a bp:AggregateLink .\n            }\n        }\n        \n        ?outgoingLinks sh:property ?propertyShape . \n\n        VALUES ?propertyP { \n            sh:targetClass\n            sh:path\n            sh:class\n            sh:name\n        }\n        ?propertyShape ?propertyP ?propertyO .\n        OPTIONAL {\n            ?propertyShape  sh:path ?path .\n            ?path sh:inversePath ?inversePath .\n\n        }\n    } UNION {\n        # incoming links\n        {\n            SELECT ?incomingLinks ?inAggregate ?inShape ?type WHERE {\n                BIND (k8s:Deployment AS ?type)\n                ?inShape sh:targetClass ?type .\n                ?inShape sh:group ?inAggregate . \n                ?inAggregate rdf:type/rdfs:subClassOf* bp:Aggregate.\n                ?incomingLinks bp:target ?inAggregate .\n                ?incomingLinks a bp:AggregateLink .\n            }\n        }\n        VALUES ?linkP { \n            sh:targetClass\n            sh:property\n            bp:target\n            rdfs:label\n        }\n        ?incomingLinks ?linkP ?linkO .\n    } UNION {\n           # incoming links sh:property\n        {\n            SELECT ?incomingLinks WHERE {\n                BIND (k8s:Deployment AS ?type)\n                ?shape sh:targetClass ?type .\n                ?shape sh:group ?aggregate . \n                ?aggregate rdf:type/rdfs:subClassOf* bp:Aggregate.\n                ?incomingLinks bp:target ?aggregate .\n                ?incomingLinks a bp:AggregateLink .\n            }\n        }\n        ?incomingLinks sh:property ?propertyShape .\n        VALUES ?propertyP { \n            sh:targetClass\n            sh:path\n            sh:class\n            sh:name\n        }\n        ?propertyShape ?propertyP ?propertyO .\n        OPTIONAL {\n             ?propertyShape  sh:path ?path .\n             ?path sh:inversePath ?inversePath .\n\n        }\n    }\n}\n\n\n\n",
    "metadata": {}
  },
  {
    "kind": 1,
    "language": "markdown",
    "value": "# Bidiractional Link with Two Connectors\n",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "\n                        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \n                        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \n                        PREFIX blueprint: <https://flux.described.at/> \n        \n                        CONSTRUCT {\n                            <https://ld.flux.zazuko.com/blueprint/app/BusinessObjectToDatabaseSchemaLink> blueprint:result <https://ld.flux.zazuko.com/blueprint/app/BusinessObjectToDatabaseSchemaLink/0> .\n                            <https://ld.flux.zazuko.com/blueprint/app/BusinessObjectToDatabaseSchemaLink/0> a  blueprint:CompositionLinkResult .\n                            <https://ld.flux.zazuko.com/blueprint/app/BusinessObjectToDatabaseSchemaLink/0> blueprint:result ?result .\n                            <https://ld.flux.zazuko.com/blueprint/app/BusinessObjectToDatabaseSchemaLink/0> rdfs:label \"Sotred Business Objects\" .\n                            ?result ?resultP ?resultO .\n                            ?element_0_2 ?connectionPointP ?connectionPointO .\n                            ?element_0_2 a blueprint:ConnectionPoint .\n                            ?result blueprint:source ?element_0_2 . \n                            ?element_0_2 blueprint:target ?element_0_3 . \n                            ?element_0_3 ?connectionPointP ?connectionPointODest .\n                            ?element_0_3 a blueprint:ConnectionPoint .\n                        } WHERE {\n                            \n                                <http://data.table.org/wiski-db> a <http://schema.table.org/DatabaseSchema> .\n                                <http://data.table.org/wiski-db> <http://schema.table.org/hasTable> ?element_0_1 .\n                                \n\n                                ?element_0_1 <http://schema.table.org/column> ?element_0_2 .\n                                ?element_0_2 a <http://schema.table.org/Column> .\n                                VALUES ?connectionPointP {\n                                    rdfs:label\n                                    rdf:type\n                                }\n                                ?element_0_2 ?connectionPointP ?connectionPointO .\n                                \n\n                            ?element_0_2 ^<http://example.org/ea/assignment> ?element_0_3 .\n                            ?element_0_3 a <http://example.org/ea/Attribute> .\n                            ?element_0_3 ?connectionPointP ?connectionPointODest .\n                          \n\n                                ?element_0_3 ^<http://example.org/ea/assignment> ?result .\n                                ?result a <http://example.org/ea/BusinessObject> .\n                                VALUES ?resultP {\n                                    rdf:type\n                                    rdfs:label\n                                }\n                                ?result ?resultP ?resultO .\n                                \n                        }",
    "metadata": {}
  },
  {
    "kind": 2,
    "language": "sparql",
    "value": "# [endpoint=http://localhost:7001]\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX schema: <http://schema.org/>\n\nPREFIX nileaUi: <https://zazuko.com/nilea/ui/> \nPREFIX local: <http://localhost/data> \nPREFIX database: <http://schema.table.org/>\n\n\nCONSTRUCT {\n    ?componentIri nileaUi:hasComponentData ?subject .\n    # interface DatabaseTable \n    ?subject ?nileaTableP ?tableO .\n\n    # DatabaseColumn\n    ## iri: string\n    ## label: string;\n    ## type: string;\n    ?column ?nileaColumnP ?columnO .\n   \n    # DatabaseColumn.settings: DatabaseColumnSettings[]\n    # export interface DatabaseColumnSettings {\n    # label: string;\n    # isKey?: boolean;\n    # isPrimaryKey?: boolean;\n    ## this is more difficult \n    ## its' about fk, pk, unique, and  nullable\n    ### unique\n    ?column nileaUi:hasSettings ?uniqueContraint.\n    ?uniqueContraint rdfs:label ?uniqueContraintLabel .\n    ?uniqueContraint nileaUi:isKey false .\n    ?uniqueContraint nileaUi:isPrimaryKey false.\n\n    ### pk\n    ?column nileaUi:hasSettings ?pkContraint.\n    ?pkContraint nileaUi:hasDeterminant ?column .\n    ?pkContraint nileaUi:isKey true .\n    ?pkContraint nileaUi:isPrimaryKey true .\n    ?pkContraint  rdfs:label ?pkContraintLabel .\n\n    ## fk\n    ?column nileaUi:hasSettings ?fk.\n    ?fk nileaUi:isKey true .\n    ?fk nileaUi:isPrimaryKey false .\n    ?fk  rdfs:label ?fkLabel .\n\n    ## nullable\n    ?column nileaUi:hasSettings ?nullableIri.\n    ?nullableIri nileaUi:isKey false .\n    ?nullableIri nileaUi:isPrimaryKey false .\n    ?nullableIri  rdfs:label ?nullableLabel .\n\n    # DatabaseReference \n    #toTable: string;\n    #toColumn: string;\n    ?column nileaUi:references ?referenceOutIri.\n    ?referenceOutIri nileaUi:isInbound false .\n    ?referenceOutIri nileaUi:table ?toTable .\n    ?toTable rdfs:label ?toTableLabel .\n    ?referenceOutIri nileaUi:column ?toColumn .\n    ?toColumn rdfs:label ?toColumnLabel . \n    # fromTable: string;\n    # fromColumn: string;\n    ?column nileaUi:references ?referenceInIri.\n    ?referenceInIri nileaUi:isInbound true .\n    ?referenceInIri nileaUi:table ?fromTable .\n    ?fromTable rdfs:label ?fromTableLabel .\n    ?referenceInIri nileaUi:column ?fromColumn .\n    ?fromColumn rdfs:label ?fromColumnLabel .  \n} WHERE {\n    {\n        BIND (<http://data.table.org/Plankton-metadata/Export$A1:D250_Importfehler64> as ?subject)\n        BIND (<https://zazuko.com/nilea/ui/SqlDatabseTableDefinition> as ?componentIri)\n    } UNION\n    {\n        BIND (<http://data.table.org/Plankton-metadata/Export$A1:D250_Importfehler64> as ?subject)\n        # table props\n        VALUES (?tableP ?nileaTableP)  { \n            (rdfs:label rdfs:label)\n            (database:contextLabel nileaUi:contextLabel)\n            (database:column nileaUi:column)\n         }\n         ?subject ?tableP ?tableO .\n        \n    } UNION {\n        # columns props\n         {\n            SELECT ?column WHERE {\n               BIND (<http://data.table.org/Plankton-metadata/Export$A1:D250_Importfehler64> as ?subject)\n               ?subject database:column ?column .\n            }\n        }\n        VALUES (?columnP ?nileaColumnP) { \n            (rdf:type rdf:type)\n            (rdfs:label rdfs:label)\n            (database:dataType nileaUi:dataType)\n         }\n         ?column ?columnP ?columnO . \n\n    } UNION {\n        # columns settings unique contraints\n         {\n            SELECT ?column WHERE {\n               BIND (<http://data.table.org/Plankton-metadata/Export$A1:D250_Importfehler64> as ?subject)\n               ?subject database:column ?column .\n            }\n        }\n        ?uniqueContraint database:hasDeterminant ?column .\n        ?uniqueContraint database:isPrimaryKey false .\n        BIND(\"unique\" as ?uniqueContraintLabel)   \n    } UNION {\n        # columns settings pk contraints\n         {\n            SELECT ?column WHERE {\n               BIND (<http://data.table.org/Plankton-metadata/Export$A1:D250_Importfehler64> as ?subject)\n               ?subject database:column ?column .\n            }\n        }\n        ?pkContraint database:hasDeterminant ?column .\n        ?pkContraint database:isPrimaryKey true .\n        BIND(\"PK\" as ?pkContraintLabel)   \n    } UNION {\n        # columns settings fk \n         {\n            SELECT ?column WHERE {\n                BIND (<http://data.table.org/Plankton-metadata/Export$A1:D250_Importfehler64> as ?subject)\n               ?subject database:column ?column .\n            }\n        }\n        ?fk database:sourceTableColumn ?column .\n        BIND(\"FK\" as ?fkLabel)   \n    } UNION {\n        # columns settings non nullable \n         {\n            SELECT ?column WHERE {\n                BIND (<http://data.table.org/Plankton-metadata/Export$A1:D250_Importfehler64> as ?subject)\n               ?subject database:column ?column .\n            }\n        }\n        ?column database:isNullable false.\n        # create a new iri for nullable\n        BIND(IRI(CONCAT(STR(?column),\"/non-nullable\")) as ?nullableIri)\n        BIND(\"not null\" as ?nullableLabel)   \n    } UNION {\n        # DatabaseReference OUT means FK\n         {\n            SELECT ?column WHERE {\n               BIND (<http://data.table.org/Plankton-metadata/Export$A1:D250_Importfehler64> as ?subject)\n               ?subject database:column ?column .\n            }\n        }\n        ?referenceOut database:sourceTableColumn ?column .\n        ?referenceOut database:referenceTable ?toTable .\n        ?toTable rdfs:label ?toTableLabel .\n        ?referenceOut database:referenceTableColumn ?toColumn .\n        ?toColumn rdfs:label ?toColumnLabel .\n        BIND(IRI(CONCAT(STR(?referenceOut),'/out'))as ?referenceOutIri )\n    }\n    UNION {\n        # DatabaseReference IN\n         {\n            SELECT ?column WHERE {\n                BIND (<http://data.table.org/Plankton-metadata/Export$A1:D250_Importfehler64> as ?subject)\n               ?subject database:column ?column .\n            }\n        }\n        ?referenceIn database:referenceTableColumn ?column .\n        ?referenceIn database:sourceTable ?fromTable .\n        ?fromTable rdfs:label ?fromTableLabel .\n        ?referenceIn database:sourceTableColumn ?fromColumn .\n        ?fromColumn rdfs:label ?fromColumnLabel .\n        BIND(IRI(CONCAT(STR(?referenceIn),'/in'))as ?referenceInIri )\n    }\n}",
    "metadata": {}
  }
]