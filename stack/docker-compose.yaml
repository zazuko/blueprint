services:
  store:
    image: ghcr.io/zazuko/fuseki-geosparql:v3
    profiles:
      - basic-metadata
      - k8s-demo-data
      - k8s-custom-data
      - full-demo-dataset
    ports:
      - 3030:3030
    environment:
      - ADMIN_PASSWORD=admin
    volumes:
      - ./fuseki/config.ttl:/fuseki/config.ttl:ro
      - ./fuseki/shiro.ini:/opt/fuseki/shiro.ini:ro
      - ./volumes/fuseki/:/fuseki/databases/

  store-data:
    build:
      context: ./fuseki-data/
      dockerfile: Dockerfile
    profiles:
      - basic-metadata
      - k8s-demo-data
      - k8s-custom-data
      - full-demo-dataset
    restart: "no"
    volumes:
      - ./fuseki-data:/app/data:ro

  blueprint:
    image: ghcr.io/zazuko/blueprint:latest
    build:
      context: ..
      dockerfile: Dockerfile
    profiles:
      - basic-metadata
      - k8s-demo-data
      - k8s-custom-data
      - full-demo-dataset
    ports:
      - 8081:80
    environment:
      # NOTE: 127.0.0.1 is in the context of the browser (frontend), not the server (backend)
      - ENDPOINT_URL=http://127.0.0.1:8080/query
      - SPARQL_CONSOLE_URL=http://127.0.0.1:8080/sparql/#query
      - GRAPH_EXPLORER_URL=http://127.0.0.1:8080/graph-explorer/?resource
      - FULL_TEXT_SEARCH_DIALECT=fuseki

  trifid:
    image: ghcr.io/zazuko/trifid:v5
    profiles:
      - basic-metadata
      - k8s-demo-data
      - k8s-custom-data
      - full-demo-dataset
    ports:
      - 8080:8080
    environment:
      - DATASET_BASE_URL=
      - SPARQL_ENDPOINT_URL=http://store:3030/blueprint/query
      - SPARQL_USERNAME=admin
      - SPARQL_PASSWORD=admin

  # Add k8s demo data (for those who don't have a Kubernetes cluster)
  add-demo-k8s-data:
    build:
      context: ./fuseki-data/
      dockerfile: Dockerfile
    profiles:
      - k8s-demo-data
    restart: "no"
    volumes:
      - ./demo-data/k8s.ttl:/app/data/k8s.ttl:ro

  # Add custom k8s data generated locally (will not be in the git history)
  add-custom-k8s-data:
    build:
      context: ./fuseki-data/
      dockerfile: Dockerfile
    profiles:
      - k8s-custom-data
    restart: "no"
    volumes:
      - ./volumes/k8s-data/data.ttl:/app/data/k8s.ttl:ro

  # Add demo dataset (will not be in the git history)
  add-demo-dataset:
    build:
      context: ./fuseki-data/
      dockerfile: Dockerfile
    profiles:
      - full-demo-dataset
    restart: "no"
    environment:
      - DOWNLOAD_URL=https://download.zazukoians.org/blueprint/demo-data.nt
      - DOWNLOAD_NAME=demo-dataset.nt

  ########################
  # QLEVER SPECIFIC PART #
  ########################
  qlever-server:
    image: ghcr.io/zazukoians/qlever-server:v0.5.6
    profiles:
      - qlever
    environment:
      QLEVER_DATA_NAME: olympics
      QLEVER_DATA_GET_DATA_CMD: curl -sLo olympics.zip https://github.com/wallscope/olympics-rdf/raw/master/data/olympics-nt-nodup.zip && unzip -q -o olympics.zip && rm olympics.zip
      QLEVER_DATA_DESCRIPTION: 120 Years of Olympics, data from https://github.com/wallscope/olympics-rdf
      QLEVER_DATA_TEXT_DESCRIPTION: All literals, search with FILTER CONTAINS(?var, "...")
      QLEVER_INDEX_INPUT_FILES: olympics.nt
      QLEVER_INDEX_CAT_INPUT_FILES: cat olympics.nt
      QLEVER_INDEX_SETTINGS_JSON: '{ "ascii-prefixes-only": false, "num-triples-per-batch": 100000 }'
      # QLEVER_SERVER_ENDPOINT: http://example.com:7001
      QLEVER_SERVER_HOST_NAME: 127.0.0.1
      QLEVER_SERVER_PORT: 7001
      QLEVER_SERVER_ACCESS_TOKEN: olympics_7643543846_Zs6nw7yi3Z9m
      QLEVER_SERVER_MEMORY_FOR_QUERIES: 5G
      QLEVER_SERVER_CACHE_MAX_SIZE: 2G
      QLEVER_SERVER_TIMEOUT: 30s
      QLEVER_RUNTIME_SYSTEM: native
      QLEVER_UI_UI_CONFIG: olympics
      QLEVER_UI_UI_PORT: 7002

  qlever-blueprint:
    image: ghcr.io/zazuko/blueprint:latest
    build:
      context: ..
      dockerfile: Dockerfile
    profiles:
      - qlever
    ports:
      - 8081:80
    environment:
      # NOTE: 127.0.0.1 is in the context of the browser (frontend), not the server (backend)
      - ENDPOINT_URL=http://127.0.0.1:8080/query
      - SPARQL_CONSOLE_URL=http://127.0.0.1:8080/sparql/#query
      - GRAPH_EXPLORER_URL=http://127.0.0.1:8080/graph-explorer/?resource
      - FULL_TEXT_SEARCH_DIALECT=qlever

  qlever-trifid:
    image: ghcr.io/zazuko/trifid:v5
    profiles:
      - qlever
    ports:
      - 8080:8080
    environment:
      - DATASET_BASE_URL=""
      - SPARQL_ENDPOINT_URL=http://qlever-server:7001/
